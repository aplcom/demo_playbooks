---
#- hosts: localhost
#  tasks:
#    - debug: var=manageiq.api_url
#    - debug: var=manageiq.api_token
#    - debug: var=manageiq.service
#    - debug: var=manageiq.event_target

#- name: debug all
#  debug: msg="{{ manageiq }}"
#
#- name: debug service
#  debug: msg="{{ manageiq.service }}"
#- name: debug api_url
#  debug: msg="{{ manageiq.api_url }}"
#- name: debug token
#  debug: msg="{{ manageiq.api_token }}"
##- name: debug event target
##  debug: msg="{{ manageiq.event_target }}"

- name: DEBUG 1ST
  debug: msg="{{ item.id }}"
  with_items: "{{ ec2_deployed_instances }}"

- name: Loop over instances
  uri:
    url: "{{ manageiq_vms_url }}?expand=resources&attributes=name,id,ems_ref&filter[]=ems_ref={{ item.id }}"
    method: GET
    body_format: json
    validate_certs: False
    headers:
      X-Auth-Token: "{{ auth_token }}"
      Content-Type: "application/json" 
    status_code: 200
  with_items: "{{ ec2_deployed_instances }}"
  register: get_vms_ids

- name: debug vm ids 1.13
  debug: msg="{{ item.json.resources[0].href }}"
  with_items: "{{ get_vms_ids.results }}"
  ignore_errors: True

- name: Set the Service URL
  set_fact:
    #svc_url: "/api/services/26"
    svc_url: "/api/{{ manageiq.service }}"
    #svc_url: "{{ manageiq_services_url }}"

#- name: Set the VM URL
#  set_fact:
#    #vm_url: "/api/{{ manageiq.event_target }}"
#    vm_url: "{{ item.json.resources[0].href }}"
#  with_items: "{{ get_vms_ids.results }}"

#- name: debug vms urls
#  debug: msg="{{ vm_url }}"

#- debug: var=svc_url

#- name: Create an array of vms
#  set_fact:
#    vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item } } ] }}"
#  with_items:
#    - "{{ vm_url }}"

- name: Create an array of vms
  set_fact:
    # vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item.json.resources[0].href } } ] }}"
    # vms: "{{ vms|default([]) + [ { 'uid_ems': item.json.resources[0].ems_ref } ] }}"
    vms: "{{ vms|default([]) + [ item.json.resources[0].ems_ref ] }}"
  with_items: "{{ get_vms_ids.results }}"

- debug: var=vms

- debug: msg="{{ manageiq_provider_url }}/{{ prov_id }}"

- name: Register vms with the service
  uri:
    # url: "{{ manageiq_api_url }}/api/services"
    url: "{{ manageiq_api_url }}{{ svc_url }}"
    method: POST
    body_format: json
    body:
      # action: add_resource
      action: add_provider_vms
      # resources : "{{ vms }}"
      resource :
        #provider: { "href": "{{ provider_info.json.results[0].href }}" }
        provider: { "href": "{{ manageiq_provider_url }}/{{ prov_id }}" }
        uid_ems: "{{ vms }}"
    validate_certs: False
    headers:
      #X-Auth-Token: "{{ manageiq.api_token }}"
      X-Auth-Token: "{{ auth_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: output

# - debug: var=output.json.results[0].success
- debug: var=output.json

- name: Check if the VM was successfully attached to service
  fail: msg="{{output.json.results[0].message}}"
  # when: output.json.results[0].success == false
  when: output.json.success == false
